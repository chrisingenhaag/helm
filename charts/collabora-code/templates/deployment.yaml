apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "collabora-code.fullname" . }}
  labels:
    {{- include "collabora-code.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: {{ .Values.strategy }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "collabora-code.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "collabora-code.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "collabora-code.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "collabora-code.fullname" . }}
          env:
            - name: username
              valueFrom:
                secretKeyRef:
                  name: {{ include "collabora-code.fullname" . }}
                  key: username
            - name: password
              valueFrom:
                secretKeyRef:
                  name: {{ include "collabora-code.fullname" . }}
                  key: password
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: http
              scheme: {{ .Values.livenessProbe.scheme }}
            {{- if not .Values.startupProbe.enabled }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            {{- end }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: http
              scheme: {{ .Values.readinessProbe.scheme }}
            {{- if not .Values.startupProbe.enabled }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            {{- end }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: {{ .Values.startupProbe.path }}
              port: http
              scheme: {{ .Values.startupProbe.scheme }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
          {{- end }}
          ports:
            - name: http
              containerPort: 9980
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securitycontext | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
